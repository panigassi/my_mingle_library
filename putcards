require 'net/https'
require 'time'
require 'api-auth'
require 'json'


OPTIONS = {:access_key_id => 'user', :access_secret_key => 'secretkey'}

URLCARDS = 'https://test.mingle.thoughtworks.com/api/v2/projects/my_team_members/cards.xml'

PARAMS = {
  :card => {
      :name => "New Title again 3",
      :type => "Story",
      :description => "Testing again",
      :properties => [{ :name => "Status",:value => "New"}]
    }
  }
  
PARAMS = {
  :card => {
      :name => "New Title again 3",
      :type => "Story",
      :description => "Testing again",
      :properties => [{ :name => "Status",:value => "New"}, { :name => "Owner",:value => "esnyder"}]
    }
  }

def http_put(url, params, options={})
uri = URI.parse(url)
http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true
paramstemp = ["card[properties][][name]", "level"]
paramstemp = []
paramstemp << ["card[properties][][name]", "level"]
puts paramstemp
paramstemp << ["card[properties][][value]", "L"]
puts paramstemp.to_json

body = params.to_json

request = Net::HTTP::Put.new(uri.request_uri)
request.body = body
request['Content-Type'] = 'application/json'
request['Content-Length'] = body.bytesize

ApiAuth.sign!(request, options[:access_key_id], options[:access_secret_key])
response = http.request(request)
card = response.body

if response.code.to_i > 300
raise StandardError, <<-ERROR
Request URL: #{url}
Response: #{response.code}
Response Message: #{response.message}
Response Headers: #{response.to_hash.inspect}
Response Body: #{response.body}
ERROR
end

card
end
http_put(URL, PARAMS, OPTIONS)

